#!/bin/bash

#================================================================================#
# PAINEL DE CONTROLE E INSTALAÇÃO DO RUSTYPROXY
# Gerencia portas e a instalação/remoção do serviço.
#================================================================================#

INSTALL_DIR="/opt/rustyproxy"
PORTS_FILE="${INSTALL_DIR}/ports"
EXECUTABLE_PATH="${INSTALL_DIR}/proxyrust"
SYMLINK_PATH="/usr/local/bin/rustyproxy"

C_OFF='\033[0m'
C_RED='\033[1;31m'
C_GREEN='\033[1;32m'
C_YELLOW='\033[1;33m'
C_BLUE='\033[1;34m'
C_BOLD='\033[1m'

log_info() { echo -e "${C_BLUE}${C_BOLD}[INFO]${C_OFF} $1"; }
log_success() { echo -e "${C_GREEN}${C_BOLD}[OK]${C_OFF} $1"; }
log_warning() { echo -e "${C_YELLOW}${C_BOLD}[AVISO]${C_OFF} $1"; }
log_error() { echo -e "${C_RED}${C_BOLD}[ERRO]${C_OFF} $1"; }

TOTAL_STEPS=9
CURRENT_STEP=0
show_progress() {
    PERCENT=$((CURRENT_STEP * 100 / TOTAL_STEPS))
    echo -e "${C_YELLOW}Progresso: [${PERCENT}%] - $1${C_OFF}"
}
increment_step() { CURRENT_STEP=$((CURRENT_STEP + 1)); }

install_rustyproxy() {
    clear
    log_info "Iniciando a instalação/atualização do RustyProxy..."
    
    CURRENT_STEP=0; show_progress "Atualizando repositórios..."; export DEBIAN_FRONTEND=noninteractive
    apt-get update -y > /dev/null 2>&1 || { log_error "Falha ao atualizar os repositórios."; return 1; }
    increment_step

    show_progress "Verificando o sistema...";
    ! command -v lsb_release &> /dev/null && apt-get install -y lsb-release > /dev/null 2>&1
    OS_NAME=$(lsb_release -is); VERSION=$(lsb_release -rs)
    case $OS_NAME in
        Ubuntu) [[ ! "$VERSION" =~ ^(24\.|22\.|20\.|18\.) ]] && { log_error "Versão do Ubuntu não suportada."; return 1; } ;;
        Debian) [[ ! "$VERSION" =~ ^(12|11|10|9) ]] && { log_error "Versão do Debian não suportada."; return 1; } ;;
        *) log_error "Sistema não suportado. Use Ubuntu ou Debian."; return 1; ;;
    esac
    log_success "Sistema compatível."
    increment_step; increment_step

    show_progress "Instalando pacotes necessários e atualizando sistema...";
    apt-get upgrade -y > /dev/null 2>&1
    apt-get install -y curl build-essential git > /dev/null 2>&1 || { log_error "Falha ao instalar pacotes."; return 1; }
    increment_step

    show_progress "Criando diretório ${INSTALL_DIR}...";
    mkdir -p "${INSTALL_DIR}"
    increment_step

    show_progress "Instalando o ambiente Rust...";
    if ! command -v rustc &> /dev/null; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y > /dev/null 2>&1 || { log_error "Falha ao instalar Rust."; return 1; }
        source "$HOME/.cargo/env"
    fi
    increment_step

    show_progress "Compilando RustyProxy (isso pode levar vários minutos)...";
    rm -rf /root/RustyProxyOnly
    git clone --branch "main" https://github.com/sofrenoob/RustyProxyOnly.git /root/RustyProxyOnly > /dev/null 2>&1 || { log_error "Falha ao clonar o repositório."; return 1; }
    mv /root/RustyProxyOnly/menu.sh "${INSTALL_DIR}/menu"
    (
        cd /root/RustyProxyOnly/RustyProxy
        source "$HOME/.cargo/env"
        cargo build --release --jobs $(nproc) > /dev/null 2>&1 || { log_error "Falha ao compilar o RustyProxy."; return 1; }
        mv ./target/release/RustyProxy "${EXECUTABLE_PATH}"
    )
    increment_step

    show_progress "Configurando permissões...";
    chmod +x "${EXECUTABLE_PATH}"
    chmod +x "${INSTALL_DIR}/menu"
    ln -sf "${INSTALL_DIR}/menu" "${SYMLINK_PATH}"
    increment_step

    show_progress "Limpando arquivos temporários...";
    rm -rf /root/RustyProxyOnly/
    increment_step
    
    echo ""
    log_success "Instalação concluída com sucesso!"
}
uninstall_rustyproxy() {
    clear
    read -p "Você tem certeza que deseja remover o RustyProxy? [s/N]: " CONFIRM
    if [[ "$CONFIRM" =~ ^[sS]$ ]]; then
        log_info "Parando e desabilitando todos os serviços do RustyProxy..."
        if [ -f "$PORTS_FILE" ]; then
            for port in $(cat "$PORTS_FILE"); do
                del_proxy_port "$port" >/dev/null 2>&1
            done
        fi
        
        log_info "Removendo arquivos de instalação..."
        rm -rf "${INSTALL_DIR}"
        rm -f "${SYMLINK_PATH}"
        
        log_success "RustyProxy desinstalado com sucesso."
    else
        log_info "Desinstalação cancelada."
    fi
}
is_port_in_use() {
    (netstat -tuln 2>/dev/null || ss -tuln 2>/dev/null) | grep -q ":$1\b"
}
add_proxy_port() {
    local port=$1
    local status=${2:-"@RustyProxy"}
    [[ -z "$port" ]] && { log_error "Número da porta inválido."; return; }

    if is_port_in_use "$port"; then
        log_error "A porta $port já está em uso por outro serviço."
        return
    fi

    local command="${EXECUTABLE_PATH} --port $port --status \"$status\""
    local service_file_path="/etc/systemd/system/proxyrust${port}.service"
    
    cat > "$service_file_path" <<- EOF
[Unit]
Description=RustyProxy port ${port}
After=network.target

[Service]
ExecStart=${command}
Restart=always
LimitNOFILE=infinity

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable "proxyrust${port}.service" >/dev/null 2>&1
    systemctl start "proxyrust${port}.service"
    echo "$port" >> "$PORTS_FILE"
    log_success "Porta $port aberta e serviço iniciado."
}
del_proxy_port() {
    local port=$1
    [[ -z "$port" ]] && { log_error "Número da porta inválido."; return; }
    
    systemctl disable "proxyrust${port}.service" >/dev/null 2>&1
    systemctl stop "proxyrust${port}.service"
    rm -f "/etc/systemd/system/proxyrust${port}.service"
    systemctl daemon-reload
    sed -i "/^$port$/d" "$PORTS_FILE"
    log_success "Porta $port fechada e serviço removido."
}
show_menu() {
    clear
    echo -e "\E[44;1;37m     RUSTY PROXY   by:@alfalemos      \E[0m"
    echo ""

    if [ -f "$EXECUTABLE_PATH" ]; then
        printf " Status: ${C_GREEN}%-35s${C_OFF}\n" "Instalado"
    else
        printf " Status: ${C_RED}%-35s${C_OFF}\n" "Não Instalado"
    fi
    
    if [ -s "$PORTS_FILE" ]; then
        printf " Portas Ativas: ${C_YELLOW}%-28s${C_OFF}\n" "$(tr '\n' ' ' < "$PORTS_FILE")"
    else
        printf " Portas Ativas: %-28s\n" "Nenhuma"
    fi

    echo ""
    echo -e "${C_RED}[${C_GREEN}1${C_RED}]${C_OFF} • ${C_YELLOW}ABRIR PORTA${C_OFF}"
    echo -e "${C_RED}[${C_GREEN}2${C_RED}]${C_OFF} • ${C_YELLOW}FECHAR PORTA${C_OFF}"
    echo -e "${C_RED}[${C_GREEN}3${C_RED}]${C_OFF} • ${C_BLUE}INSTALAR / ATUALIZAR RUSTYPROXY${C_OFF}"
    echo -e "${C_RED}[${C_GREEN}4${C_RED}]${C_OFF} • ${C_RED}DESINSTALAR RUSTYPROXY${C_OFF}"
    echo -e "${C_RED}[${C_GREEN}0${C_RED}]${C_OFF} • ${C_YELLOW}SAIR DO SCRIPT${C_OFF}"
    echo ""
    read -p "--> Selecione uma opção: " option

    case $option in
        1)
            if [ ! -f "$EXECUTABLE_PATH" ]; then
                log_error "RustyProxy não está instalado. Use a opção 3."
            else
                read -p "Digite a porta a ser aberta: " port
                read -p "Digite o status de conexão (padrão: Rustyproxy@alfalemos): " status
                add_proxy_port "$port" "$status"
            fi
            ;;
        2)
            if [ ! -f "$EXECUTABLE_PATH" ]; then
                log_error "RustyProxy não está instalado."
            else
                read -p "Digite a porta a ser fechada: " port
                del_proxy_port "$port"
            fi
            ;;
        3)
            install_rustyproxy
            ;;
        4)
            uninstall_rustyproxy
            ;;
        0)
            clear; exit 0
            ;;
        *)
            log_error "Opção inválida."
            ;;
    esac
    echo ""
    read -n 1 -s -r -p "Pressione qualquer tecla para continuar..."
}

[[ "$EUID" -ne 0 ]] && { log_error "Execute este script como ROOT."; exit 1; }

mkdir -p "$INSTALL_DIR"
touch "$PORTS_FILE"

while true; do
    show_menu
done