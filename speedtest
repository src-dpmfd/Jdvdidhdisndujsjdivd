#!/bin/bash

#--------------------------------------------------------------------
# 0. VERIFICA SE ESTÁ SENDO EXECUTADO COMO ROOT
#--------------------------------------------------------------------
if [[ $EUID -ne 0 ]]; then
   echo -e "\033[1;31mERRO: Este script precisa ser executado com privilégios de superusuário.\033[0m"
   echo -e "Por favor, execute com 'sudo': \033[1;37msudo $0\033[0m"
   exit 1
fi

#--------------------------------------------------------------------
# FUNÇÃO PARA LIMPEZA E INSTALAÇÃO
#--------------------------------------------------------------------
update_and_install_speedtest() {
    clear
    echo -e "\033[1;33m--- ATUALIZANDO E INSTALANDO SPEEDTEST ---\033[0m"
    echo -e "Este processo removerá qualquer versão antiga e instalará a oficial."

    # PASSO 1: Remover completamente qualquer instalação anterior.
    echo -e "\n\033[1;36m> Removendo versões antigas (speedtest e speedtest-cli)...\033[0m"
    apt-get purge speedtest speedtest-cli -y > /dev/null 2>&1
    rm -f /etc/apt/sources.list.d/speedtest.list > /dev/null 2>&1
    
    # PASSO 2: Instalar o cliente oficial da Ookla.
    echo -e "\033[1;36m> Instalando o cliente oficial da Ookla...\033[0m"
    apt-get install curl gnupg lsb-release -y > /dev/null 2>&1
    curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | bash > /dev/null 2>&1
    apt-get update > /dev/null 2>&1
    apt-get install speedtest -y > /dev/null 2>&1

    # PASSO 3: Verificar se a instalação foi bem-sucedida.
    if ! command -v speedtest &> /dev/null; then
        echo -e "\n\033[1;31mFalha crítica na instalação do speedtest. Não foi possível continuar.\033[0m"
    else
        echo -e "\n\033[1;32mInstalação/Atualização concluída com sucesso!\033[0m"
    fi
    
    read -p "Pressione [ENTER] para voltar ao menu..."
}

#--------------------------------------------------------------------
# FUNÇÃO PARA EXECUTAR O TESTE
#--------------------------------------------------------------------
run_speedtest() {
    clear
    # Verifica se o comando existe antes de tentar rodar
    if ! command -v speedtest &> /dev/null; then
        echo -e "\033[1;31mERRO: O comando 'speedtest' não está instalado.\033[0m"
        echo -e "Por favor, use a opção 'Atualizar/Reinstalar' no menu primeiro."
        read -p "Pressione [ENTER] para voltar ao menu..."
        return
    fi

    echo -e "\033[1;33m--- INICIANDO TESTE DE VELOCIDADE ---\033[0m"
    echo "Isso pode levar um minuto..."

    RESULT=$(LC_ALL=C speedtest --accept-license --accept-gdpr 2>&1)

    # Extrai os dados
    PING=$(echo "$RESULT" | grep "Latency:" | awk '{print $2, $3}')
    DOWNLOAD=$(echo "$RESULT" | grep "Download:" | awk '{print $2, $3}')
    UPLOAD=$(echo "$RESULT" | grep "Upload:" | awk '{print $2, $3}')
    SHARE_URL=$(echo "$RESULT" | grep "Result URL:" | awk '{print $3}')

    if [[ -z "$PING" ]]; then
        echo -e "\n\033[1;31mNão foi possível extrair os resultados do teste.\033[0m"
        echo "Abaixo está a saída bruta do comando para depuração:"
        echo "----------------------------------------------------"
        echo "$RESULT"
        echo "----------------------------------------------------"
    else
        # Exibe o resultado formatado
        echo -e "\n\033[1;32mTeste de velocidade concluído!\033[0m"
        echo "--------------------------------------------------------------------"
        echo -e "  \033[1;37mPing (Latência): \033[1;33m$PING\033[0m"
        echo -e "  \033[1;37mDownload.......: \033[1;33m$DOWNLOAD\033[0m"
        echo -e "  \033[1;37mUpload.........: \033[1;33m$UPLOAD\033[0m"
        if [[ -n "$SHARE_URL" ]]; then
            echo ""
            echo -e "  \033[1;37mLink com o resultado: \033[1;36m$SHARE_URL\033[0m"
        fi
        echo "--------------------------------------------------------------------"
    fi

    read -p "Pressione [ENTER] para voltar ao menu..."
}

#--------------------------------------------------------------------
# LOOP DO MENU PRINCIPAL
#--------------------------------------------------------------------
while true; do
    clear
    echo -e "\033[1;37m===========================================\033[0m"
    echo -e "\033[1;36m       MENU DE TESTE DE VELOCIDADE\033[0m"
    echo -e "\033[1;37m===========================================\033[0m"
    echo ""
    echo -e " \033[1;33m1)\033[0m \033[1;32mAtualizar / Reinstalar o Speedtest\033[0m"
    echo -e " \033[1;33m2)\033[0m \033[1;37mIniciar Teste de Velocidade\033[0m"
    echo ""
    echo -e " \033[1;33m0)\033[0m \033[1;31mSair\033[0m"
    echo ""
    echo -e "\033[1;37m-------------------------------------------\033[0m"
    read -p " Escolha uma opção: " choice

    case "$choice" in
        1)
            update_and_install_speedtest
            ;;
        2)
            run_speedtest
            ;;
        0)
            clear
            echo -e "\033[1;36mSaindo...\033[0m"
            sleep 1
            menu
            ;;
        *)
            echo -e "\n\033[1;31mOpção inválida! Tente novamente.\033[0m"
            sleep 1
            ;;
    esac
done