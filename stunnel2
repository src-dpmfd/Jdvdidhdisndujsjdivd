#!/bin/bash
#----------------------------------------------------------------
# GERENCIADOR DE SSL TUNNEL E SSLH (COM ESTILO VISUAL SOLICITADO)
#----------------------------------------------------------------

# Função para pausar o script e aguardar o usuário
press_enter_to_continue() {
    echo ""
    read -p " Pressione [ENTER] para continuar..."
}

# Função para verificar se uma porta já está em uso
is_port_in_use() {
    local port="$1"
    if ss -tlpn | grep -q ":$port\b"; then
        echo -e "\n\033[1;31m ERRO:\033[0m A porta \033[1;33m$port\033[0m já está em uso. Por favor, escolha outra."
        press_enter_to_continue
        return 0
    fi
    return 1
}

# Animação simples de progresso
show_progress() {
    local pid=$!
    local spinstr='|/-\'
    echo -n "  Executando...  "
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf "[\e[0;33m%c\e[0m]" "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep 0.2
        printf "\b\b\b"
    done
    printf "   \b\b\b"
    echo -e "[\033[1;32mOK\033[0m]"
}

#----------------------------------------------------------------
# GERENCIAMENTO DO SSL TUNNEL (STUNNEL)
#----------------------------------------------------------------
menu_stunnel() {
    clear
    if ! command -v stunnel4 > /dev/null; then
        # Menu de Instalação do Stunnel
        echo -e "\E[44;1;37m        INSTALADOR SSL TUNNEL (STUNNEL)        \E[0m\n"
        echo -e " O SSL Tunnel não está instalado."
        echo ""
        echo -e " Escolha o modo de configuração:"
        echo -e "  \033[1;33m1)\033[0m Modo Padrão (Redireciona para o SSH, porta 22)"
        echo -e "  \033[1;33m2)\033[0m Modo WebSocket (Redireciona para um Proxy, porta 80/8080)"
        echo -e "  \033[1;33m0)\033[0m Voltar"
        echo ""
        read -p " Opção [1-2] (padrão: 1): " -e -i 1 MODE_CHOICE
        
        local forward_port
        case "$MODE_CHOICE" in
            1) forward_port='22';;
            2) forward_port='80';;
            0) return;;
            *) echo -e "\n\033[1;31m Opção inválida!\033[0m"; sleep 2; menu_stunnel; return;;
        esac
        
        read -p " Digite a porta para o SSL Tunnel (padrão: 443): " -e -i 443 ssl_port
        is_port_in_use "$ssl_port" && menu_stunnel && return

        echo -e "\n\033[1;32m> Iniciando instalação do Stunnel...\033[0m"
        (apt-get update -y && apt-get install stunnel4 -y) > /dev/null 2>&1 &
        show_progress
        
        echo -e "\033[1;32m> Configurando Stunnel...\033[0m"
        cat > /etc/stunnel/stunnel.conf <<-EOF
pid = /var/run/stunnel4.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = a:SO_REUSEADDR=1
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1

[stunnel]
accept = ${ssl_port}
connect = 127.0.0.1:${forward_port}
EOF
        
        echo -e "\033[1;32m> Gerando certificado SSL autoassinado...\033[0m"
        (
        openssl genrsa -out /etc/stunnel/key.pem 2048
        openssl req -new -x509 -key /etc/stunnel/key.pem -out /etc/stunnel/cert.pem -days 3650 -subj "/C=BR/ST=SP/L=SaoPaulo/O=SSHPLUS/OU=VPN/CN=localhost"
        cat /etc/stunnel/cert.pem /etc/stunnel/key.pem > /etc/stunnel/stunnel.pem
        rm /etc/stunnel/cert.pem /etc/stunnel/key.pem
        chmod 600 /etc/stunnel/stunnel.pem
        ) > /dev/null 2>&1 &
        show_progress

        echo -e "\033[1;32m> Ativando e iniciando o serviço...\033[0m"
        sed -i 's/ENABLED=0/ENABLED=1/' /etc/default/stunnel4
        (service stunnel4 restart) > /dev/null 2>&1 &
        show_progress
        
        echo -e "\n\033[1;32m Stunnel instalado e configurado na porta \033[1;33m$ssl_port\033[0m!"
        press_enter_to_continue
    else
        # Menu de Gerenciamento do Stunnel
        local current_ports=$(netstat -nltp 2>/dev/null | grep 'stunnel4' | awk '{print $4}' | awk -F: '{print $NF}' | tr '\n' ' ')
        echo -e "\E[44;1;37m         GERENCIADOR SSL TUNNEL (STUNNEL)        \E[0m\n"
        echo -e " Stunnel está \033[1;32mATIVO\033[0m. Portas em uso: \033[1;33m$current_ports\033[0m\n"
        echo -e "  \033[1;33m1)\033[0m Alterar Porta do Stunnel"
        echo -e "  \033[1;33m2)\033[0m Desinstalar o Stunnel"
        echo -e "  \033[1;33m0)\033[0m Voltar"
        echo ""
        read -p " Opção [1-2]: " response

        case "$response" in
            1)
                read -p " Digite a nova porta para o Stunnel: " new_port
                [[ -z "$new_port" ]] && { echo -e "\n\033[1;31m Nenhuma porta inserida.\033[0m"; sleep 2; return; }
                is_port_in_use "$new_port" && return
                
                local old_port=$(grep 'accept' /etc/stunnel/stunnel.conf | awk '{print $NF}')
                sed -i "s/accept = $old_port/accept = $new_port/" /etc/stunnel/stunnel.conf
                
                echo -e "\n\033[1;32m> Reiniciando Stunnel...\033[0m"
                (service stunnel4 restart) > /dev/null 2>&1 &
                show_progress
                
                echo -e "\n\033[1;32m Porta alterada para \033[1;33m$new_port\033[0m com sucesso!"
                press_enter_to_continue
                ;;
            2)
                read -p " Tem certeza que deseja remover o Stunnel? [s/n]: " confirm
                if [[ "$confirm" =~ ^[Ss]$ ]]; then
                    echo -e "\n\033[1;31m> Removendo Stunnel...\033[0m"
                    ( service stunnel4 stop; apt-get purge stunnel4 -y; rm -rf /etc/stunnel /etc/default/stunnel4 ) > /dev/null 2>&1 &
                    show_progress
                    echo -e "\n\033[1;32m Stunnel removido com sucesso!\033[0m"
                    press_enter_to_continue
                fi
                ;;
            0) return;;
            *) echo -e "\n\033[1;31m Opção inválida!\033[0m"; sleep 2;;
        esac
    fi
}

#----------------------------------------------------------------
# GERENCIAMENTO DO SSLH MULTIPLEXER
#----------------------------------------------------------------
menu_sslh() {
    clear
    if ! command -v sslh > /dev/null; then
        # Menu de Instalação do SSLH
        echo -e "\E[44;1;37m           INSTALADOR SSLH MULTIPLEXER           \E[0m\n"
        echo -e " O SSLH não está instalado."
        echo -e " Ele permite usar vários serviços (SSH, SSL) na mesma porta."
        echo -e " A porta padrão para o SSLH será a \033[1;33m443\033[0m.\n"
        read -p " Deseja continuar com a instalação? [s/n]: " confirm
        
        if [[ "$confirm" =~ ^[Ss]$ ]]; then
            is_port_in_use 443 && return
            
            echo -e "\n\033[1;32m> Instalando SSLH...\033[0m"
            (DEBIAN_FRONTEND=noninteractive apt-get -y install sslh) > /dev/null 2>&1 &
            show_progress

            local ssh_port='22'
            local stunnel_port=$(netstat -nltp 2>/dev/null | grep 'stunnel' | awk '{print $4}' | cut -d: -f2 | head -n1)
            [[ -z "$stunnel_port" ]] && stunnel_port='8443'
            
            echo -e "\033[1;32m> Configurando SSLH...\033[0m"
            cat > /etc/default/sslh <<-EOF
RUN=yes
DAEMON=/usr/sbin/sslh
DAEMON_OPTS="--user sslh --listen 0.0.0.0:443 --ssh 127.0.0.1:${ssh_port} --ssl 127.0.0.1:${stunnel_port} --http 127.0.0.1:80 --pidfile /var/run/sslh/sslh.pid"
EOF
            
            echo -e "\033[1;32m> Iniciando serviço SSLH...\033[0m"
            (systemctl enable sslh && systemctl start sslh) > /dev/null 2>&1 &
            show_progress

            echo -e "\n\033[1;32m SSLH instalado e ativo na porta \033[1;33m443\033[0m!"
            press_enter_to_continue
        fi
    else
        # Menu de Gerenciamento do SSLH
        local sslh_port=$(netstat -nltp 2>/dev/null | grep 'sslh' | awk '{print $4}' | awk -F: '{print $NF}' | tr '\n' ' ')
        echo -e "\E[44;1;37m          GERENCIADOR SSLH MULTIPLEXER           \E[0m\n"
        echo -e " SSLH está \033[1;32mATIVO\033[0m. Porta em uso: \033[1;33m$sslh_port\033[0m\n"
        echo -e "  \033[1;33m1)\033[0m Desinstalar o SSLH"
        echo -e "  \033[1;33m0)\033[0m Voltar"
        echo ""
        read -p " Opção: " response

        case "$response" in
            1)
                read -p " Tem certeza que deseja remover o SSLH? [s/n]: " confirm
                if [[ "$confirm" =~ ^[Ss]$ ]]; then
                    echo -e "\n\033[1;31m> Removendo SSLH...\033[0m"
                    (systemctl stop sslh; apt-get purge sslh -y) > /dev/null 2>&1 &
                    show_progress
                    echo -e "\n\033[1;32m SSLH removido com sucesso!\033[0m"
                    press_enter_to_continue
                fi
                ;;
            0) return;;
            *) echo -e "\n\033[1;31m Opção inválida!\033[0m"; sleep 2;;
        esac
    fi
}

#----------------------------------------------------------------
# MENU PRINCIPAL
#----------------------------------------------------------------
while true; do
    clear
    # Verifica status dos serviços
    stunnel_status="\033[1;31mINATIVO\033[0m"
    if command -v stunnel4 > /dev/null && pgrep -x "stunnel4" > /dev/null; then
        stunnel_ports=$(netstat -nltp 2>/dev/null | grep 'stunnel4' | awk '{print $4}' | awk -F: '{print $NF}' | tr '\n' ' ')
        stunnel_status="\033[1;32mATIVO\033[0m | Portas: \033[1;37m$stunnel_ports\033[0m"
    fi
    
    sslh_status="\033[1;31mINATIVO\033[0m"
    if command -v sslh > /dev/null && pgrep -x "sslh" > /dev/null; then
        sslh_port=$(netstat -nltp 2>/dev/null | grep 'sslh' | awk '{print $4}' | awk -F: '{print $NF}' | tr '\n' ' ')
        sslh_status="\033[1;32mATIVO\033[0m | Porta: \033[1;37m$sslh_port\033[0m"
    fi

    echo -e "\E[44;1;37m     SSL TUNNEL & SSLH  By: @alfalemos     \E[0m\n"
    echo -e "   Status dos Serviços:"
    echo ""
    echo -e "  \033[1;37mSSL Tunnel (stunnel): $stunnel_status"
    echo -e "  \033[1;37mSSLH Multiplexer....: $sslh_status\033[0m"
    echo ""
    echo ""
    echo -e "  \033[1;33m1)\033[0m Gerenciar SSL Tunnel (stunnel)"
    echo -e "  \033[1;33m2)\033[0m Gerenciar SSLH Multiplexer"
    echo -e "  \033[1;33m0)\033[0m Sair"
    echo ""
    read -p " Escolha uma opção: " main_option

    case "$main_option" in
        1) menu_stunnel;;
        2) menu_sslh;;
        0) clear; conexao;;
        *) echo -e "\n\033[1;31m Opção inválida!\033[0m"; sleep 1;;
    esac
done