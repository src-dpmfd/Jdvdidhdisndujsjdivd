#!/bin/bash
#################
# molezinha üòè      #
# By: @alfalemos    #
# Adaptado para Systemd #
#################

# --- FUN√á√ïES DE VERIFICA√á√ÉO E INSTALA√á√ÉO DE DEPEND√äNCIAS ---
check_and_install_packages() {
    # Screen n√£o √© mais necess√°rio, ent√£o foi removido da verifica√ß√£o.
    if ! command -v unzip &> /dev/null; then
        echo -e "\033[1;33mInstalando 'unzip' como depend√™ncia necess√°ria...\033[0m"
        if command -v apt-get &> /dev/null; then
            apt-get update &>/dev/null
            apt-get install -y unzip &>/dev/null
        elif command -v yum &> /dev/null; then
            yum install -y unzip &>/dev/null
        fi
        echo -e "\033[1;32mDepend√™ncia instalada.\033[0m"
        sleep 1
    fi
}

# --- FUN√á√ïES DE GERENCIAMENTO DO WEBSOCKET (SEM ALTERA√á√ïES) ---
install_websocket() {
    clear
    echo -e "\033[1;33mIniciando a instala√ß√£o/atualiza√ß√£o do WebSocket...\033[0m"
    sleep 1

    mkdir -p /etc/SSHPlus
    cd /etc/SSHPlus || exit

    echo -e "\033[1;33mBaixando bin√°rio do WebSocket...\033[0m"
    wget -q --no-check-certificate https://raw.githubusercontent.com/src-dpmfd/Jdvdidhdisndujsjdivd/main/WebSocket.zip && \
    unzip -oq WebSocket.zip && \
    rm WebSocket.zip && \
    chmod +x WebSocket

    if [ $? -eq 0 ]; then
        echo -e "\033[1;32mInstala√ß√£o/Atualiza√ß√£o do WebSocket conclu√≠da com sucesso!\033[0m"
        echo -e "\033[1;33mBaixando script de monitoramento (opcional)...\033[0m"
        wget -q -O /usr/bin/wssecury.sh.1 https://raw.githubusercontent.com/src-dpmfd/Jdvdidhdisndujsjdivd/main/wssecury.sh.1
        chmod +x /usr/bin/wssecury.sh.1
    else
        echo -e "\033[1;31mOcorreu um erro durante a instala√ß√£o do WebSocket.\033[0m"
        rm -f WebSocket.zip WebSocket &>/dev/null
    fi
}

# --- FUN√á√ïES DE GERENCIAMENTO DO SERVI√áO (AGORA COM SYSTEMD) ---

# Fun√ß√£o para criar o arquivo de servi√ßo do systemd
create_systemd_service() {
    WS_PORT=$1
    RESPONSE_MSG=$2
    MODE_CHOICE=$3
    
    CMD="/etc/SSHPlus/WebSocket -proxy_port 0.0.0.0:${WS_PORT} -msg='${RESPONSE_MSG}'"
    if [ "$MODE_CHOICE" = "2" ]; then
        CMD="$CMD -tls=true"
    fi

    cat > /etc/systemd/system/websocket.service <<EOF
[Unit]
Description=WebSocket Service by @alfalemos
After=network.target

[Service]
User=root
WorkingDirectory=/etc/SSHPlus
ExecStart=${CMD}
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable websocket &>/dev/null
}

# Fun√ß√£o para parar o servi√ßo
stop_service() {
    clear
    echo -e "\033[1;33mParando o servi√ßo WebSocket...\033[0m"
    systemctl stop websocket
    sleep 1
    if ! systemctl is-active --quiet websocket; then
        echo -e "\033[1;32mServi√ßo parado com sucesso!\033[0m"
    else
        echo -e "\033[1;31mErro ao parar o servi√ßo.\033[0m"
    fi
}

# Fun√ß√£o para desinstalar o WebSocket e o servi√ßo systemd
uninstall_websocket() {
    clear
    echo -e "\E[41;1;37m        DESINSTALAR WEBSOCKET        \E[0m\n"
    read -p " Voc√™ tem certeza que deseja remover o WebSocket? [s/N]: " CONFIRM
    
    if [[ "$CONFIRM" =~ ^[sS]$ ]]; then
        echo -e "\n\033[1;33mParando e desabilitando o servi√ßo...\033[0m"
        systemctl stop websocket &>/dev/null
        systemctl disable websocket &>/dev/null
        
        echo -e "\033[1;33mRemovendo arquivos...\033[0m"
        rm -f /etc/SSHPlus/WebSocket
        rm -f /usr/bin/wssecury.sh.1
        rm -f /etc/systemd/system/websocket.service
        
        systemctl daemon-reload

        if [ -d "/etc/SSHPlus" ] && [ -z "$(ls -A /etc/SSHPlus)" ]; then
            echo -e "\033[1;33mRemovendo diret√≥rio de configura√ß√£o vazio...\033[0m"
            rmdir /etc/SSHPlus
        fi
        
        sleep 1
        echo -e "\n\033[1;32mWebSocket desinstalado com sucesso!\033[0m"
    else
        echo -e "\n\033[1;31mDesinstala√ß√£o cancelada.\033[0m"
    fi
}

# Fun√ß√£o para configurar e iniciar o servi√ßo
configure_and_start() {
    clear
    echo -e "\E[44;1;37m      WEBSOCKET SECURITY  by:@alfalemos      \E[0m\n"

    if [ ! -f "/etc/SSHPlus/WebSocket" ]; then
        echo -e "\033[1;31mERRO: O arquivo do WebSocket n√£o foi encontrado.\033[0m"
        echo -e "\033[1;33mPor favor, use a op√ß√£o 3 para instalar primeiro.\033[0m"
        return
    elif [ ! -x "/etc/SSHPlus/WebSocket" ]; then
        chmod +x /etc/SSHPlus/WebSocket
    fi

    read -p " Digite a porta para o WebSocket (padr√£o: 80): " WS_PORT
    WS_PORT=${WS_PORT:-80}
    echo ""
    echo -e " Escolha o modo de opera√ß√£o:"
    echo -e " \033[1;33m1)\033[0m Proxy Websocket"
    echo -e " \033[1;33m2)\033[0m Proxy Websocket TLS (SSL)"
    read -p " Op√ß√£o [1-2] (padr√£o: 1): " -e -i 1 MODE_CHOICE
    echo ""
    read -p " Digite a mensagem de resposta (padr√£o: websocket-@alfalemos): " RESPONSE_MSG
    RESPONSE_MSG=${RESPONSE_MSG:-websocket-@alfalemos}

    if netstat -tuln | grep -q ":$WS_PORT" && ! systemctl is-active --quiet websocket; then
        echo -e "\n\033[1;31mERRO FATAL: A porta ${WS_PORT} j√° est√° em uso por outro servi√ßo.\033[0m"
        echo -e "\033[1;33mUse o comando 'netstat -tulnp' para ver qual servi√ßo est√° usando a porta.\033[0m"
        return
    fi
    
    echo -e "\033[1;33mCriando e configurando o servi√ßo systemd...\033[0m"
    create_systemd_service "$WS_PORT" "$RESPONSE_MSG" "$MODE_CHOICE"
    
    echo -e "\033[1;33mIniciando o servi√ßo WebSocket...\033[0m"
    systemctl restart websocket

    sleep 2
    if systemctl is-active --quiet websocket; then
        echo -e "\n\033[1;32mServi√ßo WebSocket iniciado com sucesso!\033[0m"
    else
        echo -e "\n\033[1;31mErro ao iniciar o servi√ßo WebSocket. Verifique as configura√ß√µes.\033[0m"
        echo -e "\033[1;33mUse 'systemctl status websocket' ou 'journalctl -u websocket' para ver os detalhes do erro.\033[0m"
    fi
}

# --- MENU PRINCIPAL ---
main_menu() {
    while true; do
        clear
        echo -e "\E[44;1;37m      WEBSOCKET SECURITY  by:@alfalemos      \E[0m"
        echo ""

        if systemctl is-active --quiet websocket; then
            # Extrai informa√ß√µes do arquivo de servi√ßo para exibi√ß√£o
            PORT=$(grep -oP 'proxy_port \S+:\K[0-9]+' /etc/systemd/system/websocket.service 2>/dev/null)
            if grep -q -- '-tls=true' /etc/systemd/system/websocket.service 2>/dev/null; then
                MODE="TLS/SSL P-WS"
            else
                MODE="PROXY WS"
            fi
            printf " Status: \033[1;32m%-10s\033[0m Porta: \033[1;33m%-9s\033[0m Modo: \033[1;33m%s\033[0m\n" "ATIVO" "$PORT" "$MODE"
        else
            printf " Status: \033[1;31m%s\033[0m\n" "INATIVO"
        fi

        echo ""
        echo -e "\033[1;31m[\033[1;36m1\033[1;31m] \033[1;37m‚Ä¢ \033[1;33mINICIAR / ALTERAR WEBSOCKET\033[0m"
        echo -e "\033[1;31m[\033[1;36m2\033[1;31m] \033[1;37m‚Ä¢ \033[1;33mPARAR WEBSOCKET\033[0m"
        echo -e "\033[1;31m[\033[1;36m3\033[1;31m] \033[1;37m‚Ä¢ \033[1;33mINSTALAR / ATUALIZAR WEBSOCKET\033[0m"
        echo -e "\033[1;31m[\033[1;36m4\033[1;31m] \033[1;37m‚Ä¢ \033[1;31mDESINSTALAR WEBSOCKET\033[0m"
        echo -e "\033[1;31m[\033[1;36m0\033[1;31m] \033[1;37m‚Ä¢ \033[1;33mSAIR DO SCRIPT\033[0m"
        echo ""
        read -p " --> Selecione uma op√ß√£o: " option

        case $option in
            1)
                configure_and_start; read -p $'\n Pressione [Enter] para continuar...'
                ;;
            2)
                stop_service; read -p $'\n Pressione [Enter] para continuar...';;
            3)
                install_websocket; read -p $'\n Pressione [Enter] para continuar...';;
            4)
                uninstall_websocket; read -p $'\n Pressione [Enter] para continuar...';;
            0)
                clear; exit 0;;
            *)
                echo -e "\n\033[1;31mOp√ß√£o inv√°lida!\033[0m"; sleep 1;;
        esac
    done
}

# --- EXECU√á√ÉO INICIAL ---
check_and_install_packages
main_menu