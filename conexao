#!/bin/bash

# Esta função deve ser declarada fora de fun_conexao
v2rayinst() {
    [[ -e "/bin/v2ray" ]] && {
        clear
        v2raymanager
    } || {
        cd $HOME
        # Usando curl para ser consistente com o código original
        source <(curl -sL https://raw.githubusercontent.com/src-dpmfd/Jdvdidhdisndujsjdivd/main/v2ray)
        # O instalador original já deve chamar o menu, mas por garantia:
        clear
        [[ -e "/usr/local/bin/v2ray" ]] && v2raymanager || echo "Falha na instalação do v2ray"
    }
}

# CORREÇÃO: Esta função foi reescrita para sempre chamar o menu de gerenciamento
slow_setup() {
    # O script de instalação geralmente contém o menu de gerenciamento.
    # Vamos sempre baixá-lo e executá-lo para que o usuário possa interagir.
    cd $HOME
    wget -O install https://raw.githubusercontent.com/src-dpmfd/Jdvdidhdisndujsjdivd/main/install > /dev/null 2>&1
    chmod 777 install
    ./install
    # Remove o instalador após o uso para manter o diretório limpo
    rm install
}

display_active_services_lsof() {
    if ! command -v lsof &> /dev/null; then
        echo -e "\033[01;31m║\033[1;33m Instalando 'lsof' para verificação de serviços... \033[0m"
        (apt-get update -y && apt-get install -lsof) > /dev/null 2>&1
    fi

    local PT
    PT=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" | grep -v "COMMAND" | grep "LISTEN")
    
    if [[ -z "$PT" ]]; then
        echo -e "\033[01;31m║\033[1;33m Nenhum serviço de rede ativo detectado pelo lsof.\033[0m"
        return
    fi
    
    for porta in $(echo -e "$PT" | cut -d: -f2 | cut -d' ' -f1 | uniq); do
        local svcs
        svcs=$(echo -e "$PT" | grep -w "$porta" | awk '{print $1}' | uniq | tr '\n' ' ')
        echo -e "\033[01;31m║\033[1;33m SERVIÇO: \033[1;37m${svcs% } \033[1;33mPORTA: \033[1;37m$porta"
    done
}

x="ok"
fun_conexao() {
    while true; do
        [[ ! -e '/home/sshplus' ]] && exit 0
        
        # Limpa a tela apenas uma vez no início do loop
        clear

        # Coleta de status dos serviços
        xv2ray=$(netstat -tunlp | grep -q v2ray && echo -e "\033[1;32m◉" || echo -e "\033[1;31m○")
        var_sks1=$(ps x | grep "udpvpn" | grep -v grep > /dev/null && echo -e "\033[1;32m◉" || echo -e "\033[1;31m○")
        sts3=$([[ -e "/etc/stunnel/stunnel.conf" ]] && echo -e "\033[1;32m◉" || echo -e "\033[1;31m○")

        # Exibição do menu
        echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
        echo -e "\E[41;1;37m    ⇱         SSHPLUS  by: @alfalemos        ⇲    \E[0m"
        echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
        display_active_services_lsof
        echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
        echo -e "\033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mWEBSOCKET \033[1;31m                [\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mPROXY DRAGON \033[1;31m"
        echo -e "\033[1;31m[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mPROXY RUST \033[1;31m               [\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mPROXY DT V1 \033[1;31m"
        echo -e "\033[1;31m[\033[1;36m03\033[1;31m] \033[1;37m\033[1;37m• \033[1;33mSSL TUNNEL $sts3\033[1;31m             [\033[1;36m13\033[1;31m] \033[1;37m• \033[1;33mPROXY DT V2 \033[1;31m"
        echo -e "\033[1;31m[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mBADVPN PRO 2 ALFA $var_sks1\033[1;31m      [\033[1;36m14\033[1;31m] \033[1;37m• \033[1;33mBADVPN PRO KIRITO $var_sks1\033[1;31m"
        echo -e "\033[1;31m[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mSLOWDNS \033[1;31m                  [\033[1;36m15\033[1;31m] \033[1;37m• \033[1;33mV2RAY $xv2ray\033[1;31m"
        echo -e "\033[1;31m[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mRESOLVEDOR LOCAL\033[1;31m          [\033[1;36m16\033[1;31m] \033[1;37m• \033[1;33m(HTOP) \033[1;31m"
        echo -e "\033[1;31m[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mCHECKUSER DTUNNEL \033[1;31m        [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;33mMENU \033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m"
        echo -e "\033[1;31m[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mCHECKUSER 4G \033[1;31m             [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;33mSAIR \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m"
        echo -e "\033[1;31m[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mMEMÓRIA VIRTUAL \033[1;31m    "
        echo -e "\033[1;31m[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mCHECKUSER MODS\033[1;31m"
        echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
        echo ""
        tput civis
        echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;33m?\033[1;31m?\033[1;37m "
        read x
        tput cnorm
        
        # O clear vai antes da execução da opção
        clear

        case $x in
            1 | 01) wsmenu;;
            2 | 02) proxyrust;;
            3 | 03) stunnel2;;
            4 | 04) badvpn.sh;;
            5 | 05) 
                slow_setup
                # ADICIONADO: Pausa para o usuário ver o resultado antes de voltar ao menu
                echo -ne "\n\033[1;33mPressione [ENTER] para voltar ao menu...\033[0m"
                read
                ;;
            6 | 06) dnsserv;;
            7 | 07) menu_check;;
            8 | 08) 
                wget -O /etc/rec/licence "https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/licence" -o /dev/null
                initcheck
                ;;
            9 | 09) swapmemory.sh;;
            10) chuker.sh;;
            11) proxyd;;
            12) proxydtv1;;
            13) proxydtv2;;
            14) 
                wget -O /etc/rec/licence "https://raw.githubusercontent.com/sofrenoob/Gggggg/refs/heads/main/h/sshplus/Modulos/licence" -o /dev/null
                badvpn
                ;;
            15) v2rayinst;;
            16) htop;;
            17) menu;;
            18) 
                echo -e "\033[1;31mSaindo...\033[0m"
                sleep 1
                clear
                exit
                ;;
            *) 
                echo -e "\033[1;31mOpcao invalida !\033[0m"
                sleep 1
                ;;
        esac
    done
}

# Linha para iniciar o menu (se este for o final do script)
fun_conexao